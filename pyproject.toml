[project]
name = "pypcd4"
dynamic = ["version"]
description = "Read and write PCL .pcd files in python"
authors = [{ name = "urasakikeisuke", email = "keisuke.urasaki@map4.jp" }]
dependencies = [
    "numpy>=1.21.0",
    "python-lzf>=0.2.4",
    "pydantic >=1.10.8, <3.0.0",
]
readme = "README.md"
requires-python = ">= 3.8.2"
license = { file = "LICENSE.txt" }
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries",
    "Topic :: Utilities",
]
urls."Release Notes" = "https://github.com/MapIV/pypcd4/releases"
urls.Source = "https://github.com/MapIV/pypcd4"
urls.Tracker = "https://github.com/MapIV/pypcd4/issues"

[project.optional-dependencies]
dev = ["ruff", "mypy", "setuptools-scm"]

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = [
    "mypy>=1.5.1",
    "setuptools-scm>=7.1.0",
    "pre-commit>=3.4.0",
    "pytest>=7.4.1",
    "tox>=4.11.1",
    "pytest-cov>=4.1.0",
    "ruff>=0.3.4",
]

[tool.rye.scripts]
lint = { chain = [
    "lint:ruff-lint",
    "lint:ruff-format",
    "lint:mypy",
    "lint:tox",
] }
"lint:ruff-lint" = "ruff check --fix src"
"lint:ruff-format" = "ruff format src"
"lint:mypy" = "mypy src"
"lint:tox" = "tox"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch]
version.source = "vcs"
build.hooks.vcs.version-file = "src/pypcd4/_version.py"

[tool.hatch.version.raw-options]
local_scheme = "no-local-version"

[tool.setuptools_scm]
write_to = "src/pypcd4/_version.py"
version_scheme = "only-version"
local_scheme = "no-local-version"

[tool.ruff]
line-length = 100
indent-width = 4

[tool.ruff.lint]
select = ["E", "F", "I", "PLR", "B", "ANN"]
ignore = ["ANN101", "ANN102", "PLR2004"]
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true
docstring-code-line-length = 60

[tool.mypy]
ignore_missing_imports = true
check_untyped_defs = true

[tool.tox]
legacy_tox_ini = """
    [tox]
    min_version = 4.0
    isolated_build = true
    env_list =
        py38
        py39
        py310
        py311
        py312

    [testenv]
    deps = pytest
    commands = pytest tests -vv
"""
